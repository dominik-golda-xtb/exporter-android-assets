{[ let extension = asset.format /]}
{[ let group = asset.group.name /]}
{[ let parent = asset.group.parent.name /]}

{[ log ("parent: " + parent + " name: " + asset.originalName + " extension: " + extension) /]}

{[ if (parent == "Flags") ]}
    {[ let folder = "flags" /]}
    {[ log ("name: " + asset.originalName + " extension: " + extension) /]}

    {* Generate name as [originalName][-numberOfDuplicates][extension] *}
    {[ let duplicateExtension = (asset.previouslyDuplicatedNames > 0 ? ("_" + asset.previouslyDuplicatedNames) : "") /]}
    {[ let name = (asset.originalName.lowercased() + duplicateExtension + "." + extension) /]}

    {[ let nameTrimmed = ("flag_" + name.split("_")[0]) /]}
    {[ let fileExtension = (nameTrimmed.contains(extension) ? "" : ("." + extension)) /]}
    {[ let filePath = (folder + "/" + nameTrimmed + fileExtension) /]}

    {* {[ log ("name: " + name + " filePath: " + filePath) /]} *}

    {{ filePath }}
{[/]} 
